#include <iostream>
#include <sqlite3.h>

int createAndInsertUsers(sqlite3* db) {
    const char* createTableSQL = "CREATE TABLE IF NOT EXISTS Users ("
                                 "ID INTEGER PRIMARY KEY, "
                                 "Name TEXT NOT NULL, "
                                 "Age INTEGER NOT NULL);";

    char* errMsg = nullptr;
    int rc = sqlite3_exec(db, createTableSQL, nullptr, nullptr, &errMsg);
    if (rc != SQLITE_OK) {
        std::cerr << "Failed to create table: " << errMsg << std::endl;
        sqlite3_free(errMsg);
        return rc;
    }

    const char* insertSQL = "INSERT INTO Users (ID, Name, Age) VALUES "
                            "(1, 'Alice', 25), "
                            "(2, 'Bob', 30), "
                            "(3, 'Charlie', 22), "
                            "(4, 'Diana', 28), "
                            "(5, 'Evan', 35);";

    rc = sqlite3_exec(db, insertSQL, nullptr, nullptr, &errMsg);
    if (rc != SQLITE_OK) {
        std::cerr << "Failed to insert data: " << errMsg << std::endl;
        sqlite3_free(errMsg);
    }
    return rc;
}

int callback(void* NotUsed, int argc, char** argv, char** azColName) {
    for (int i = 0; i < argc; i++) {
        std::cout << azColName[i] << ": " << (argv[i] ? argv[i] : "NULL") << " | ";
    }
    std::cout << std::endl;
    return 0;
}

int displayUsers(sqlite3* db) {
    const char* selectSQL = "SELECT * FROM Users;";
    char* errMsg = nullptr;

    int rc = sqlite3_exec(db, selectSQL, callback, nullptr, &errMsg);
    if (rc != SQLITE_OK) {
        std::cerr << "Failed to retrieve data: " << errMsg << std::endl;
        sqlite3_free(errMsg);
    }
    return rc;
}

int main() {
    sqlite3* db;
    int rc = sqlite3_open("user.db", &db);

    if (rc) {
        std::cerr << "Can't open database: " << sqlite3_errmsg(db) << std::endl;
        return rc;
    } else {
        std::cout << "Opened database successfully.\n";
    }

    rc = createAndInsertUsers(db);
    if (rc != SQLITE_OK) {
        sqlite3_close(db);
        return rc;
    }

    std::cout << "\nUser list from database:\n";
    displayUsers(db);

    sqlite3_close(db);
    return 0;
}
